@page "/find"
@using Microsoft.EntityFrameworkCore
@using SampleBlazorApp.Models

@inject NavigationManager NavManager
@inject SampleBlazorAppContext _context

<h1>Find</h1>

<div class="input-group">
    <input type="text" class="form-control me-1" @bind="FindStr" />
    <span class="input-group-btn">
        <button class="btn btn-primary px-4" @onclick="OnClickAction">
            Click
        </button>
    </span>
</div>

<hr />

@if (People != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>PersonId</th>
                <th>Name</th>
                <th>Mail</th>
                <th>Age</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in People)
            {
                <tr>
                    <td>@item.PersonId</td>
                    <td>@item.Name</td>
                    <td>@item.Mail</td>
                    <td>@item.Age</td>

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="text-primary">please wait...</div>
}

<div class="input-group">
    <input type="text" class="form-control me-1" @bind="FindStr2" />
    <span class="input-group-btn">
        <button class="btn btn-primary px-4" @onclick="OnClickAction2">
            Click
        </button>
    </span>
</div>

<hr />

@if (People2 != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>PersonId</th>
                <th>Name</th>
                <th>Mail</th>
                <th>Age</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in People2)
            {
                <tr>
                    <td>@item.PersonId</td>
                    <td>@item.Name</td>
                    <td>@item.Mail</td>
                    <td>@item.Age</td>

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="text-primary">please wait...</div>
}

@code{
    private string? FindStr { get; set; }
    private IList<Person>? People { get; set; }
    private string? FindStr2 { get; set; }
    private IList<Person>? People2 { get; set; }

    protected override async Task OnInitializedAsync()
    {
        People = await _context.Person.OrderBy(m => m.Age).ThenByDescending(m => m.PersonId).ToListAsync<Person>();

        IQueryable<Person> result = from p in _context.Person select p;
        People2 = result.ToList();
    }
    private void OnClickAction()
    {
        People = _context.Person.Where(m => FindStr == null ||
        m.Name.Contains(FindStr) || m.Mail.Contains(FindStr)).OrderBy(m => m.Age).ThenByDescending(m => m.PersonId).ToList();
    }
    private void OnClickAction2()
    {
        IQueryable<Person> result = from p in _context.Person where p.Name.Contains(FindStr2) select p;
        People2 = result.ToList();
    }

}

